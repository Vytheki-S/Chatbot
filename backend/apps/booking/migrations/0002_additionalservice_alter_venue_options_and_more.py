# Generated by Django 5.2.5 on 2025-09-21 01:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("booking", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdditionalService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_name",
                    models.CharField(help_text="Service name", max_length=100),
                ),
                (
                    "basic_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Base rate for service",
                        max_digits=10,
                    ),
                ),
                (
                    "extra_hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Additional rate per extra hour",
                        max_digits=10,
                    ),
                ),
                (
                    "is_mandatory",
                    models.BooleanField(
                        default=False, help_text="Whether service is required"
                    ),
                ),
            ],
        ),
        migrations.AlterModelOptions(
            name="venue",
            options={},
        ),
        migrations.RemoveField(
            model_name="booking",
            name="applicant_id",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="booking_id",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="end_time",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="event_date",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="event_type_id",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="grant_date",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="granted_by",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="invitation_path",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="org_id",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="permission_granted",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="pre_arrangement_date",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="pre_arrangement_end",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="pre_arrangement_start",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="start_time",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="status",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="total_hours",
        ),
        migrations.RemoveField(
            model_name="booking",
            name="venue_id",
        ),
        migrations.RemoveField(
            model_name="venue",
            name="base_rate_2h",
        ),
        migrations.RemoveField(
            model_name="venue",
            name="base_rate_4h",
        ),
        migrations.RemoveField(
            model_name="venue",
            name="base_rate_6h",
        ),
        migrations.RemoveField(
            model_name="venue",
            name="base_rate_6h_plus",
        ),
        migrations.RemoveField(
            model_name="venue",
            name="venue_id",
        ),
        migrations.AddField(
            model_name="booking",
            name="additional_notes",
            field=models.TextField(
                blank=True, help_text="Additional notes or special requests", null=True
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="booking_reference",
            field=models.CharField(
                blank=True,
                help_text="Human-readable reference",
                max_length=20,
                null=True,
                unique=True,
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="booking_status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("confirmed", "Confirmed"),
                    ("cancelled", "Cancelled"),
                    ("completed", "Completed"),
                ],
                default="pending",
                help_text="Booking status",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="custom_event_type",
            field=models.CharField(
                blank=True,
                help_text="Custom event type if 'other' is selected",
                max_length=200,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="event_types",
            field=models.JSONField(
                default=list, help_text="List of selected event types"
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="is_public",
            field=models.BooleanField(
                default=False, help_text="Whether event is public"
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="payment_status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("partial", "Partial"),
                    ("paid", "Paid"),
                    ("refunded", "Refunded"),
                ],
                default="pending",
                help_text="Payment status",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="total_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Total booking cost",
                max_digits=12,
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, help_text="Last update time"),
        ),
        migrations.AddField(
            model_name="venue",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AddField(
            model_name="venue",
            name="image",
            field=models.CharField(
                blank=True, help_text="Image file path/URL", max_length=255, null=True
            ),
        ),
        migrations.AddField(
            model_name="venue",
            name="status",
            field=models.CharField(
                choices=[("active", "Active"), ("inactive", "Inactive")],
                default="active",
                help_text="Venue availability status",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="booking",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="When booking was created"
            ),
        ),
        migrations.AlterField(
            model_name="booking",
            name="event_details",
            field=models.TextField(blank=True, help_text="Details of event", null=True),
        ),
        migrations.AlterField(
            model_name="venue",
            name="capacity",
            field=models.IntegerField(help_text="Maximum capacity"),
        ),
        migrations.AlterField(
            model_name="venue",
            name="description",
            field=models.TextField(
                blank=True, help_text="Venue description", null=True
            ),
        ),
        migrations.AlterField(
            model_name="venue",
            name="venue_name",
            field=models.CharField(help_text="Name of venue", max_length=100),
        ),
        migrations.AlterModelTable(
            name="booking",
            table=None,
        ),
        migrations.AlterModelTable(
            name="venue",
            table=None,
        ),
        migrations.CreateModel(
            name="Applicant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "applicant_name",
                    models.CharField(
                        help_text="Name from booking form", max_length=200
                    ),
                ),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("corporate_business", "Corporate / Business"),
                            ("educational_institution", "Educational Institution"),
                            ("non_profit_ngo", "Non-Profit / NGO"),
                            ("government_public_sector", "Government / Public Sector"),
                            ("private_individual", "Private Individual"),
                            ("religious_organization", "Religious Organization"),
                            (
                                "entertainment_event_management",
                                "Entertainment / Event Management",
                            ),
                            ("other", "Other"),
                        ],
                        default="other",
                        help_text="Type of organization",
                        max_length=50,
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        help_text="Organization/Institute name", max_length=200
                    ),
                ),
                (
                    "contact_no",
                    models.CharField(help_text="Contact number", max_length=20),
                ),
                ("email", models.EmailField(help_text="Email address", max_length=100)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applicants",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="booking",
            name="applicant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookings",
                to="booking.applicant",
            ),
        ),
        migrations.CreateModel(
            name="BookingSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField(help_text="Start date")),
                ("end_date", models.DateField(help_text="End date")),
                ("start_time", models.TimeField(help_text="Start time")),
                ("end_time", models.TimeField(help_text="End time")),
                (
                    "venue_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost for this venue slot",
                        max_digits=10,
                    ),
                ),
                (
                    "isfullday",
                    models.BooleanField(
                        default=False, help_text="Whether this is a full day booking"
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="slots",
                        to="booking.booking",
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booking_slots",
                        to="booking.venue",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BookingService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "duration_hours",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Hours service is needed",
                        max_digits=5,
                    ),
                ),
                (
                    "service_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost for this service",
                        max_digits=10,
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booking_services",
                        to="booking.booking",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booking_services",
                        to="booking.additionalservice",
                    ),
                ),
                (
                    "slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="booking.bookingslot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PreArrangement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "arrangement_type",
                    models.CharField(
                        choices=[
                            ("setup", "Setup"),
                            ("rehearsal", "Rehearsal"),
                            ("breakdown", "Breakdown"),
                        ],
                        help_text="Type of arrangement",
                        max_length=20,
                    ),
                ),
                ("date", models.DateField(help_text="Arrangement date")),
                ("start_time", models.TimeField(help_text="Start time")),
                ("end_time", models.TimeField(help_text="End time")),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Special instructions", null=True
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pre_arrangements",
                        to="booking.booking",
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pre_arrangements",
                        to="booking.venue",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PriceTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(help_text="Duration in hours (2, 4, 6, 12)"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Rate for this duration",
                        max_digits=10,
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_tiers",
                        to="booking.venue",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bookingslot",
            name="tier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="booking_slots",
                to="booking.pricetier",
            ),
        ),
        migrations.CreateModel(
            name="VenueImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image_url",
                    models.CharField(help_text="Image file path/URL", max_length=500),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        default=0, help_text="Order for displaying images"
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When image was uploaded"
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="venue_images",
                        to="booking.venue",
                    ),
                ),
            ],
            options={
                "ordering": ["display_order", "uploaded_at"],
            },
        ),
    ]
